[
  {
    "title": "Advanced Data Structures and Algorithms (ADSJ)",
    "questions": [
      {
        "question": "Which data structure uses LIFO order?",
        "options": ["Queue", "Stack", "Array", "Tree"],
        "answer": "Stack"
      },
      {
        "question": "What is the time complexity of binary search?",
        "options": ["O(n)", "O(n log n)", "O(log n)", "O(1)"],
        "answer": "O(log n)"
      },
      {
        "question": "Which data structure is used in BFS?",
        "options": ["Stack", "Queue", "Array", "Heap"],
        "answer": "Queue"
      },
      {
        "question": "Which traversal gives nodes in ascending order in BST?",
        "options": ["Preorder", "Inorder", "Postorder", "Level Order"],
        "answer": "Inorder"
      },
      {
        "question": "What is the height of a balanced binary tree with n nodes?",
        "options": ["O(log n)", "O(n)", "O(1)", "O(n log n)"],
        "answer": "O(log n)"
      }
    ]
  },
  {
    "title": "Database Management System (DBMS)",
    "questions": [
      {
        "question": "Which language is used to create and modify database schema?",
        "options": ["DML", "DDL", "DCL", "TCL"],
        "answer": "DDL"
      },
      {
        "question": "What is normalization in DBMS?",
        "options": ["Data backup", "Data encryption", "Reducing redundancy", "Increasing redundancy"],
        "answer": "Reducing redundancy"
      },
      {
        "question": "Which key uniquely identifies each record?",
        "options": ["Primary key", "Foreign key", "Candidate key", "Composite key"],
        "answer": "Primary key"
      },
      {
        "question": "Which of the following is a non-relational database?",
        "options": ["MySQL", "MongoDB", "PostgreSQL", "Oracle"],
        "answer": "MongoDB"
      },
      {
        "question": "What does ACID stand for?",
        "options": [
          "Atomicity, Consistency, Isolation, Durability",
          "Accuracy, Consistency, Isolation, Durability",
          "Atomicity, Clarity, Integrity, Durability",
          "Atomicity, Connectivity, Isolation, Durability"
        ],
        "answer": "Atomicity, Consistency, Isolation, Durability"
      }
    ]
  },
  {
    "title": "Operating System (OS)",
    "questions": [
      {
        "question": "Which of the following is not an OS?",
        "options": ["Windows", "Linux", "Oracle", "MacOS"],
        "answer": "Oracle"
      },
      {
        "question": "What is the function of an OS?",
        "options": ["Manage hardware", "Provide UI", "Control software", "All of the above"],
        "answer": "All of the above"
      },
      {
        "question": "What is the process state when it is waiting for an event?",
        "options": ["Running", "Waiting", "Ready", "Terminated"],
        "answer": "Waiting"
      },
      {
        "question": "Which algorithm avoids starvation?",
        "options": ["FIFO", "Round Robin", "SJF", "LIFO"],
        "answer": "Round Robin"
      },
      {
        "question": "Which is used for inter-process communication?",
        "options": ["Pipes", "Threads", "Semaphores", "All of the above"],
        "answer": "All of the above"
      }
    ]
  },
  {
    "title": "Design and Analysis of Algorithms (DAA)",
    "questions": [
      {
        "question": "Which algorithm uses divide and conquer?",
        "options": ["Bubble sort", "Insertion sort", "Merge sort", "Linear search"],
        "answer": "Merge sort"
      },
      {
        "question": "What is the worst-case complexity of Quick Sort?",
        "options": ["O(n)", "O(n^2)", "O(log n)", "O(n log n)"],
        "answer": "O(n^2)"
      },
      {
        "question": "Which is a greedy algorithm?",
        "options": ["Dijkstra's", "Bellman-Ford", "Floyd-Warshall", "DFS"],
        "answer": "Dijkstra's"
      },
      {
        "question": "What is the complexity of matrix multiplication using Strassenâ€™s algorithm?",
        "options": ["O(n^2)", "O(n^2.81)", "O(n^3)", "O(n log n)"],
        "answer": "O(n^2.81)"
      },
      {
        "question": "Which problem does dynamic programming solve efficiently?",
        "options": ["Traveling Salesman", "Sorting", "Searching", "File I/O"],
        "answer": "Traveling Salesman"
      }
    ]
  },
  {
    "title": "Computer Organization and Architecture (COA)",
    "questions": [
      {
        "question": "Which representation is used for negative numbers?",
        "options": ["1's complement", "2's complement", "Sign magnitude", "None"],
        "answer": "2's complement"
      },
      {
        "question": "Which memory is faster?",
        "options": ["RAM", "ROM", "Cache", "Hard Disk"],
        "answer": "Cache"
      },
      {
        "question": "What is the full form of ALU?",
        "options": ["Arithmetic Logic Unit", "Array Logic Unit", "Algorithm Logic Unit", "Automatic Logic Unit"],
        "answer": "Arithmetic Logic Unit"
      },
      {
        "question": "What technique is used to increase the speed of a processor?",
        "options": ["Pipelining", "Compiling", "Caching", "Looping"],
        "answer": "Pipelining"
      },
      {
        "question": "Which bus is used to carry data?",
        "options": ["Address bus", "Data bus", "Control bus", "Power bus"],
        "answer": "Data bus"
      }
    ]
  },
  {
    "title": "Java Programming (Java)",
    "questions": [
      {
        "question": "Which method is the entry point of a Java program?",
        "options": ["start()", "main()", "run()", "init()"],
        "answer": "main()"
      },
      {
        "question": "Which keyword is used to inherit a class?",
        "options": ["this", "super", "extends", "implements"],
        "answer": "extends"
      },
      {
        "question": "Which exception is thrown when a divide by zero occurs?",
        "options": ["IOException", "ArithmeticException", "NullPointerException", "IndexOutOfBoundsException"],
        "answer": "ArithmeticException"
      },
      {
        "question": "Which of these is not a Java feature?",
        "options": ["Object-oriented", "Platform independent", "Slow", "Secure"],
        "answer": "Slow"
      },
      {
        "question": "Which package contains Scanner class?",
        "options": ["java.io", "java.util", "java.lang", "java.net"],
        "answer": "java.util"
      }
    ]
  },
  {
    "title": "Development and Operations (DevOps)",
    "questions": [
      {
        "question": "Which tool is used for containerization?",
        "options": ["Docker", "Jenkins", "Kubernetes", "Ansible"],
        "answer": "Docker"
      },
      {
        "question": "Which tool is used for continuous integration?",
        "options": ["Git", "Jenkins", "Kubernetes", "Docker"],
        "answer": "Jenkins"
      },
      {
        "question": "Which of the following is a configuration management tool?",
        "options": ["Ansible", "Jira", "Slack", "Zoom"],
        "answer": "Ansible"
      },
      {
        "question": "What does CI/CD stand for?",
        "options": [
          "Continuous Integration/Continuous Delivery",
          "Continuous Input/Continuous Development",
          "Continuous Improvement/Continuous Deployment",
          "Continuous Installation/Continuous Deployment"
        ],
        "answer": "Continuous Integration/Continuous Delivery"
      },
      {
        "question": "Which tool orchestrates containers?",
        "options": ["Docker", "Git", "Kubernetes", "Jenkins"],
        "answer": "Kubernetes"
      }
    ]
  },
  {
    "title": "Software Engineering (SE)",
    "questions": [
      {
        "question": "Which model is also known as the classic life cycle model?",
        "options": ["Agile", "Spiral", "Waterfall", "RAD"],
        "answer": "Waterfall"
      },
      {
        "question": "What is the first phase of SDLC?",
        "options": ["Design", "Requirement analysis", "Coding", "Testing"],
        "answer": "Requirement analysis"
      },
      {
        "question": "Which document contains system requirements?",
        "options": ["SRS", "SDS", "SRSR", "SRD"],
        "answer": "SRS"
      },
      {
        "question": "Which testing is done without executing the code?",
        "options": ["Static Testing", "Dynamic Testing", "Unit Testing", "Integration Testing"],
        "answer": "Static Testing"
      },
      {
        "question": "Which principle emphasizes small, incremental releases?",
        "options": ["Waterfall", "Agile", "V-Model", "RAD"],
        "answer": "Agile"
      }
    ]
  },
  {
    "title": "Recursion",
    "questions": [
      {
        "question": "What is recursion?",
        "options": ["A loop", "A function calling itself", "A class", "A variable"],
        "answer": "A function calling itself"
      },
      {
        "question": "Which case is necessary in recursion to stop it?",
        "options": ["Base case", "Loop case", "Recursive call", "Return case"],
        "answer": "Base case"
      },
      {
        "question": "What is the time complexity of calculating Fibonacci using naive recursion?",
        "options": ["O(n)", "O(log n)", "O(n^2)", "O(2^n)"],
        "answer": "O(2^n)"
      },
      {
        "question": "Which data structure is used internally for recursion?",
        "options": ["Queue", "Stack", "Heap", "Graph"],
        "answer": "Stack"
      },
      {
        "question": "Which problem is best solved by recursion?",
        "options": ["Finding minimum", "Sorting array", "Tree traversals", "Array search"],
        "answer": "Tree traversals"
      }
    ]
  },
  {
    "title": "Sorting Algorithms",
    "questions": [
      {
        "question": "Which sorting algorithm has the best average-case time complexity?",
        "options": ["Bubble Sort", "Insertion Sort", "Merge Sort", "Selection Sort"],
        "answer": "Merge Sort"
      },
      {
        "question": "What is the time complexity of Bubble Sort in worst case?",
        "options": ["O(n)", "O(n log n)", "O(n^2)", "O(1)"],
        "answer": "O(n^2)"
      },
      {
        "question": "Which sorting algorithm is not comparison-based?",
        "options": ["Heap Sort", "Counting Sort", "Quick Sort", "Merge Sort"],
        "answer": "Counting Sort"
      },
      {
        "question": "Which algorithm is best for nearly sorted arrays?",
        "options": ["Bubble Sort", "Selection Sort", "Insertion Sort", "Heap Sort"],
        "answer": "Insertion Sort"
      },
      {
        "question": "Which sorting algorithm uses partitioning?",
        "options": ["Quick Sort", "Merge Sort", "Selection Sort", "Bubble Sort"],
        "answer": "Quick Sort"
      }
    ]
  },
  {
    "title": "Searching Algorithms",
    "questions": [
      {
        "question": "Which searching algorithm works only on sorted arrays?",
        "options": ["Linear Search", "Binary Search", "Jump Search", "Hashing"],
        "answer": "Binary Search"
      },
      {
        "question": "What is the worst-case time complexity of linear search?",
        "options": ["O(n)", "O(log n)", "O(1)", "O(n log n)"],
        "answer": "O(n)"
      },
      {
        "question": "Which search method divides the list into halves each time?",
        "options": ["Linear Search", "Binary Search", "DFS", "BFS"],
        "answer": "Binary Search"
      },
      {
        "question": "In binary search, what happens if the element is not found?",
        "options": ["Search ends immediately", "List is re-sorted", "Middle is changed", "New array is created"],
        "answer": "Middle is changed"
      },
      {
        "question": "Which algorithm is fastest for unsorted data?",
        "options": ["Binary Search", "Linear Search", "Hashing", "Sorting then Searching"],
        "answer": "Hashing"
      }
    ]
  },
  {
    "title": "Dynamic Programming",
    "questions": [
      {
        "question": "Dynamic Programming is mainly used to solve problems with?",
        "options": ["Greedy choice property", "Overlapping subproblems", "Backtracking", "Divide and Conquer"],
        "answer": "Overlapping subproblems"
      },
      {
        "question": "Which approach is used in dynamic programming?",
        "options": ["Top-down and Bottom-up", "Left-right", "Center-out", "Depth-first"],
        "answer": "Top-down and Bottom-up"
      },
      {
        "question": "Which is an example of a dynamic programming problem?",
        "options": ["Binary Search", "Tower of Hanoi", "0/1 Knapsack", "Heap Sort"],
        "answer": "0/1 Knapsack"
      },
      {
        "question": "What is 'memoization'?",
        "options": ["Ignoring subproblems", "Recomputing results", "Storing results to avoid recomputation", "Slowing down recursion"],
        "answer": "Storing results to avoid recomputation"
      },
      {
        "question": "Dynamic Programming problems are often solved using?",
        "options": ["Arrays", "Stacks", "Heaps", "Graphs"],
        "answer": "Arrays"
      }
    ]
  },
  {
    "title": "Bit Manipulation",
    "questions": [
      {
        "question": "Which operator is used to perform bitwise AND?",
        "options": ["&", "|", "^", "~"],
        "answer": "&"
      },
      {
        "question": "What is the result of 1 XOR 1?",
        "options": ["0", "1", "2", "Undefined"],
        "answer": "0"
      },
      {
        "question": "Which bitwise operator is used to invert all bits?",
        "options": ["&", "|", "^", "~"],
        "answer": "~"
      },
      {
        "question": "What is 5 shifted left by 1 bit (5 << 1)?",
        "options": ["10", "5", "2", "15"],
        "answer": "10"
      },
      {
        "question": "Which operation checks if a number is even?",
        "options": ["n & 1 == 1", "n | 1 == 1", "n ^ 1 == 0", "n & 1 == 0"],
        "answer": "n & 1 == 0"
      }
    ]
  }
]
